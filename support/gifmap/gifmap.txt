


GIFMAP(1)		  User Commands			GIFMAP(1)



NAME
     gifmap - web-based	image index builder

SYNOPSIS
     gifmap [ --address	string]
	    [ --coloralink colorspec ]
	    [ --colorback colorspec ]
	    [ --colorlink colorspec ]
	    [ --colortrans colorspec ]
	    [ --colorvlink colorspec ]
	    [ --columns	number ]
	    [ --debug ]
	    [ --dircoloralink colorspec	]
	    [ --dircolorback colorspec ]
	    [ --dircolorlink colorspec ]
	    [ --dircolorvlink colorspec	]
	    [ --dirindexname filename ]
	    [ --forcehtml ]
	    [ --forcemontage ]
	    [ --header string ]
	    [ --help ]
	    [ --htimage	path ]
	    [ --iconpath path ]
	    [ --indexname filename ]
	    [ --maptype	cern|ncsa ]
	    [ --maxgif number ]
	    [ --montageflags string ]
	    [ --pageindexname string ]
	    [ --prefixpath path	]
	    [ --readme filename	]
	    [ --recurse	]
	    [ --relative ]
	    [ --rootpath path ]
	    [ --rows number ]
	    [ --srcdir path ]
	    [ --thumbfont fontspec ]
	    [ --thumbgeom widthxheight ]
	    [ --title string ]
	    [ --verbose	]

DESCRIPTION
     Gifmap creates HTML index files and imagemaps corresponding
     to	a directory of image files. Gifmap is ideal for	making
     large image collections available on the net or for just
     using your	Web browser for	browsing images.

     Configuration options are derived from either the command
     line (options prefixed with '-', '--', or '+'),
     configuration file	($opt_ options), or internal defaults
     ($opt_ options). Some arguments (like X11 font
     specifications) seem to confuse PERL's getopt function. When
     this happens, try using the syntax	--option=arg to	avoid any



26/Jan/97		Last change: 1.37			1






GIFMAP(1)		  User Commands			GIFMAP(1)



     confusion caused by a space.

     The default configuration file name is ".gifmaprc".
     Configuration files are written in	PERL syntax and	are
     sourced via PERL's	eval statement.	When gifmap is executed,
     it	first reads a ".gifmaprc" file in the user's home
     directory (if present). When a directory is processed,
     gifmap will process any ".gifmaprc" files found in	the path
     from the server's root directory ($opt_rootpath) to the
     directory being processed.	All configuration options are
     additive.

     Evaluation	order is as follows :

     1)	$HOME/.gifmaprc

     2)	Command	line options

     3)	Per directory .gifmaprc	files.
	 Gifmaprc  files  are evaluated	in path	order from server
	 root to current directory. This allows	sub-directories
	 to "inherit" the configuration	of parent directories.

     Each directory is processed with items 1 &	2 already
     complete.

     In	general, gifmap's defaults produce nice	output.	 However,
     the options $opt_prefixpath, $opt_rootpath, $opt_iconpath,
     $opt_htimage, and $opt_maptype must be configured on a per-
     site basis	so please read the documentation on these options
     and perform the required configuration before executing the
     program.

PROGRAM	OPTIONS
     General:

     $opt_debug=1 (--debug)
	 Print debugging messages.

     $opt_forcehtml=1 (--forcehtml)
	 Force HTML files to be	generated (default off).  Without
	 this option, gifmap will only re-generate HTML	files as
	 required. Use this option if gifmap options have changed
	 since the last	run and	you want to update the pages
	 using the new options.

     $opt_forcemontage=1  (--forcemontage)
	 Force montage (default	false).	 Without this option,
	 gifmap	will only re-generate montages as required. Use
	 this option if	gifmap montage options have changed since
	 the last run and you want to update the pages using the
	 new options



26/Jan/97		Last change: 1.37			2






GIFMAP(1)		  User Commands			GIFMAP(1)



     $opt_help=1  (--help)
	 Display usage message.

     $opt_ignore=1
	 If $opt_ignore	is set in a directory's	"<.gifmaprc>"
	 file, then that directory will	not be processed. If
	 recursion is enabled, then recursion will continue into
	 any sub-directories. See also $opt_indexname.

     $opt_prune=1
	 If $opt_prune is set in a directory's ".gifmaprc" file,
	 then no sub-directories below that directory will be
	 processed by gifmap when operating in the recursive
	 mode.	See also $opt_indexname.

     $opt_recurse=1  (--recurse)
	 Recurse directory tree. The default is	to only	process
	 the current directory,	generating appropriate links for
	 sub-directories and the parent	directory, as if gifmap
	 is recuring. Selecting	this option causes gifmap to
	 recurse through sub-directories as well.

     $opt_srcdir=path  (--srcdir path)
	 Image directory to process or start recursion at.
	 Specify this option (usally on	the command line) if the
	 directory you want to process is not the current
	 directory.  The default directory to process is the
	 current directory.

     $opt_verbose=1  (--verbose)
	 Normally gifmap prints	only the directory names for
	 directories it	processes. Selecting the verbose option
	 displays the number of	images and sub-directories in the
	 directory as well as the number of pages to be
	 generated, and	the current page number.

	 It will also show the current image index gifmap is
	 currently creating as a progress report.

     $opt_rootpath=path	 (--rootpath path)
	 Absolute path to server root directory	(NCSA/Apatche
	 DocumentRoot) or the users Home page directory. This
	 must be an absolute path (starting with this value is
	 specified incorrectly,	gifmap will generate incorrect
	 URLs.

     $opt_prefixpath=path  (--prefixpath path)
	 The URL to prepend to specify the WWW location	of
	 $opt_rootpath.	 For the WWW server's root directory this
	 is a empty string (""). For a user's home pages this is
	 the URL path to their home pages (usally "/~username",
	 but may be different on your server). This is only used



26/Jan/97		Last change: 1.37			3






GIFMAP(1)		  User Commands			GIFMAP(1)



	 for figuring out the URLs of the gifmap icon images.

	 if $opt_relative is enabled then this option is not
	 actually used.	 It however must be used if the	gifmap
	 icon images are not in	the same WWW directory tree as
	 the directorys	gifmap is processing.  (See the	next
	 option).

     $opt_relative=1  (--relative)
	 Translate URLs	for gifmap icon	images as relative paths
	 from the directory gifmap is processing. The images must
	 be in the same	WWW directory tree otherwise the relative
	 paths will be incorrect.

	 If the	images are is not in the same directory	tree,
	 then this option will have to be turned off and
	 $opt_prefixpath and $opt_iconpath used	to locate the
	 gifmap	icon images using absolute URLs	paths for that
	 server.

     $opt_iconpath=path	 (--iconpath path)
	 This is the relative path from	the top	of the WWW
	 directory tree	specified in $opt_rootpath. If this value
	 is specified incorrectly then gifmap will generate
	 incorrect URLs	for its	icons.

     %opt_icon=(  'id',	'filename', .... );
	 This is a hash	table of all the icon images used by
	 gifmap	and located in the $opt_iconpath directory. The
	 elments are pairs of icon ids and the filename	of the
	 image.	The ids	currently used gifmap are :- prev, next,
	 next_grey, up,	help, and ball.

	 Other images can also be defined in the hash table and
	 gifmap	will automatically process those images	along
	 with the images it uses, to generate the icon URL and
	 size infomation. This information can then be used in
	 the various special formating options to add extra, or
	 special purpose links.

	 WARNING: currently icon information can only be set in
	 the global gifmaprc file (usally "~/.gifmaprc", as
	 unexpected results can	happen if modified in per-
	 directory rc files.

     Filenames:

     $opt_indexname=filename  (--indexname filename)
	 Base name of master index files (default server index),
	 usally	set to "index.html". This is also the option
	 gifmap	will look for in sub-directories and parent
	 directory ".gifmaprc" files as	the document to	make



26/Jan/97		Last change: 1.37			4






GIFMAP(1)		  User Commands			GIFMAP(1)



	 links to.

	 EG: If	a directory is not processed by	gifmap,	by either
	 never running gifmap on that directory, or the	option
	 $opt_ignore has been set, then	setting	$opt_indexname
	 will specify the document gifmap created index	files of
	 OTHER directories should link to.

	 If you	do not what gifmap to ever link	to this	directory
	 then setting this option, $opt_indexname, to "NOLINK"
	 will will prevent gifmap index	files in other
	 directories having links to this directory.

	 If you	want gifmap to entirely	ignore a particular
	 directory tree, even during recursion of the surrounding
	 directories, then you ca use the following options in
	 its ".gifmaprc" file....

	 # # .gifmaprc -- Gifmap is not	to process or even link
	 to this directory tree	# $opt_indexname    = 'NOLINK';
	 # Do not link to this directory $opt_ignore	   = 1;
	 # Do not generate gifmap image	indexes	$opt_prune
	 = 1;	      #	Don't recurse into sub-directories


     $opt_readme=filename  (--readme filename)
	 Name of directory information file. If	this named file
	 exists	in the directory, then it will be displayed in
	 preference to the first page of images. Typically the
	 contents of this file describe	the images to be viewed.

     $opt_pageindexname=string	(--pageindexname string)
	 Base name of page-related index files.	This name is used
	 as the	prefix for all generated files except for the
	 main index file. It is	usally set to some hidden (or
	 unix `dot' filename) such as ".index".


	 =item B<$opt_dirindexname>=I<filename>	 (B<--dirindexname> I<filename>)

	 Directory-name	to title cross-reference sub-directories.
	 If this file exists, then it is searched for a
	 specification for the linked directory.  If a match is
	 found,	then the replacement text is used as the link
	 text.	The format of the file is:

	  dirname  dirtext

	 With dirname representing the directory name and dirtext
	 representing the replacement link text.





26/Jan/97		Last change: 1.37			5






GIFMAP(1)		  User Commands			GIFMAP(1)



     Server-side imagemaps:

     $opt_htimage=path	(--htimage path)
	 Imagemap CGI program URL (set to '' for none).	Older
	 servers (e.g. CERN and	old NCSA) require an external
	 program to handle server-side imagemaps. These	programs
	 are generally supplied	with a full URL	to the referenced
	 file. Newer servers have server-side imagemap support
	 built-in and can accept URLs relative to the current
	 directory. If you have	a modern server, then specify
	 this value as a null string.

     $opt_maptype=maptype  (--maptype maptype)
	 Server-side map type (set to "ncsa" or	"cern"). NCSA and
	 Apache	servers	require	"ncsa".	CERN requires "cern".
	 Phttpd	can use	either format.

     Image Map Options:

     $opt_colortrans=colorspec	(--colortrans colorspec)
	 Transparent color to use in montage. Usally the same as
	 the background	color $opt_colorback of	the imagemap
	 page.

     $opt_maxgif=number	 (--maxgif number)
	 Maximum size of GIF imagemap before trying JPEG. This is
	 an optimization which tries to	avoid the JPEG conversion
	 step.

     $opt_montageflags=string  (--montageflags string)
	 Flags to ImageMagick montage. The montage program is
	 used to generate the thumbnail	images used by gifmap.
	 Read the the montage manpage for details.

     $opt_rows=number  (--rows number)
	 Montage rows (max). This is the maximum number	of
	 thumbnail rows	allowed	per page.

     $opt_thumbfont=fontspec  (--thumbfont fontspec)
	 Thumbnail title font. This is the X11 font used to title
	 thumbnails. PERL's newgetopt module seems to have
	 difficulties with the dashes in most X11 font
	 specifications. If getopt prints the usage message
	 rather	than doing what	you want to, then try using the
	 command line syntax --thumbfont=fontspec and you should
	 have better luck.

     $opt_thumbgeom=geometry  (--thumbgeom geometry)
	 Thumbnail geometry (widthxheight). This defines the size
	 of thumbnail images.





26/Jan/97		Last change: 1.37			6






GIFMAP(1)		  User Commands			GIFMAP(1)



     Colors & Appearance:

     $opt_address=string (--address string)
	 Additional information	to place in <ADDRESS></ADDRESS>
	 tags in page frame.

     $opt_coloralink=colorspec	(--coloralink colorspec)
	 Link (active) color for page frame.

     $opt_colorback=colorspec  (--colorback colorspec)
	 Background color for page frame.

     $opt_colorlink=colorspec  (--colorlink colorspec)
	 Link (unvisited) color	for page frame.

     $opt_colorvlink=colorspec	(--colorvlink colorspec)
	 Link (visited)	color for page frame.

     $opt_dircoloralink=colorspec  (--dircoloralink colorspec)
	 Link (active) color for directory frame. Defaults to
	 value of $opt_coloralink if not explicitly set.

     $opt_dircolorback=colorspec  (--dircolorback colorspec)
	 Background color for directory	frame. Defaults	to value
	 of $opt_colorback if not explicitly set.

     $opt_dircolorlink=colorspec  (--dircolorlink colorspec)
	 Link (unvisited) color	for directory frame.  Defaults to
	 value of $opt_colorlink if not	explicitly set.

     $opt_dircolorvlink=colorspec  (--dircolorvlink colorspec)
	 Link (visited)	color for directory frame.  Defaults to
	 value of $opt_colorvlink if not explicitly set.

     $opt_columns=number  (--columns number)
	 Montage columns.

     opt_frameddirfmt=string
	 Template (written in PERL) that represents the	format
	 used to generate the framed (left frame) directory
	 navigation page. This format will be seen by browsers
	 that support frames. This is a	guru-level option and is
	 subject to change.

     opt_dirfmt=string
	 Template (written in PERL) that represents the	format
	 used to generate the frame-less directory navigation
	 page. This format will	be seen	by browsers that do not
	 support frames. This is a guru-level option and is
	 subject to change.





26/Jan/97		Last change: 1.37			7






GIFMAP(1)		  User Commands			GIFMAP(1)



     $opt_header=string	 (--header string)
	 Text to add to	page header in page frame. This	option is
	 subject to change and will be eliminated if the page
	 frame is templatized.

     $opt_title=string	(--title string)
	 Page title. If	this option is not specified, then gifmap
	 will generate its own title.

AUTHORS
     Gifmap is written and maintained by Bob Friesenhahn
     (bfriesen@simple.dallas.tx.us) with copious input from
     Anthony Thyssen (anthony@cit.gu.edu.au). Anthony's	diligent
     assistance	as the first alpha tester is very much
     appreciated.








































26/Jan/97		Last change: 1.37			8



